version: "3.5"

volumes:
  prometheus_data: {}
  grafana_data: {}
  alerta_db: {}

networks:
  cosmos-monitoring:

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
       - type: volume
         source: prometheus_data
         target: /prometheus
       - type: bind
         source: ./prometheus
         target: /etc/prometheus
         read_only: true 
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - cosmos-monitoring
    restart: always

  # default login credentials: admin/admin
  grafana:
    image: grafana/grafana:latest
    env_file: ./grafana/grafana.conf
    container_name: grafana
    volumes:
      - type: volume
        source: grafana_data
        target: /var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - 9999:3000
    networks:
      - cosmos-monitoring
    restart: always

  alerta_db:
    image: postgres:11
    container_name: alerta_db
    networks:
     - cosmos-monitoring
    volumes:
      - type: volume
        source: alerta_db
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_DB: cosmos_monitoring
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    hostname: 'alerta_db'
    restart: always

  alerta:
    image: alerta/alerta-web:latest
    container_name: alerta
    networks:
     - cosmos-monitoring
    ports:
       - 8083:8083
    depends_on:
      - alerta_db
    volumes:
      - type: bind
        source: ./alerta/alertad.conf
        target: /app/alertad.conf
        read_only: true
    environment:
      - DATABASE_URL=postgres://postgres:postgres@alerta_db:5432/monitoring
      - PLUGINS=reject,blackout
    hostname: 'alerta'
    restart: always

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    networks:
      - cosmos-monitoring
    ports:
      - 9093:9093
    volumes:
      - type: bind
        source: ./prometheus/alert_manager
        target: /etc/alertmanager
        read_only: true
    command: [
      '--config.file=/etc/alertmanager/alertmanager.yml',
      '--log.level=debug',
    ]
    hostname: 'alertmanager'
    restart: always

  alertmanager-bot:
    container_name: alertmanager-bot
    command:
      - '--alertmanager.url=http://alertmanager:9093'
      - '--log.level=info'
      - '--store=bolt'
      - '--bolt.path=/data/bot.db'
      - "--telegram.admin=${TELEGRAM_ADMIN}"
      - "--telegram.token=${TELEGRAM_TOKEN}"
    image: metalmatze/alertmanager-bot:0.4.3
    networks:
      - cosmos-monitoring
    ports:
      - 8080:8080
    hostname: 'alertmanager-bot'
    restart: always
    volumes:
      - ./data:/data
      - ./default.tmpl:/templates/default.tmpl
